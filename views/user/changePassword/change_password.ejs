<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password</title>
    <link rel="stylesheet" href="./asd.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <header>
        <div class="logo">
            <img src="zipkart_logo.png" alt="Zipkart Logo">
        </div>
        <div class="user-actions">
            <p><%= session.user %></p>
        </div>
    </header>

    <main>
        <h1>Change Password</h1>
        <form id="edit-password-form">
            <div class="form-group">
                <label for="current_password">Current Password</label>
                <input type="password" id="current_password" name="current_password" required>
                <span class="error-message" style="display: none; color: red;"></span>
            </div>
            <div class="form-group">
                <label for="new_password">New Password</label>
                <input type="password" id="new_password" name="new_password" oninput="validatePasswords()" required>
                <span class="error-message" style="display: none; color: red;"></span>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirm New Password</label>
                <input type="password" id="confirm_password" name="confirm_password" oninput="validatePasswords()" required>
                <span class="error-message" style="display: none; color: red;"></span>
            </div>
            <button type="submit">Submit</button>
            <a href="/zipkart/user/accountDetails/user-profile/<%= session.userId %>">
                <button style="background-color: #555;" type="button">Cancel</button>
            </a>
        </form>
    </main>

    <script>
        document.getElementById("edit-password-form").addEventListener("submit", async function (event) {
            event.preventDefault();

            const data = {
                current_password: document.getElementById("current_password").value.trim(),
                new_password: document.getElementById("new_password").value.trim(),
                confirm_password: document.getElementById("confirm_password").value.trim(),
            };

            if (!data.current_password || !data.new_password || !data.confirm_password) {
                return Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "All fields are required!",
                });
            }

            if (!validatePasswordStrength(data.new_password)) {
                return Swal.fire({
                    icon: "error",
                    title: "Weak Password",
                    text: "New password must be at least 8 characters long, include a number, and a special character!",
                });
            }

            if (data.new_password !== data.confirm_password) {
                return Swal.fire({
                    icon: "error",
                    title: "Password Mismatch",
                    text: "New password and confirm password do not match!",
                });
            }

            try {
                const response = await axios.patch('/zipkart/user/accountDetails/change-password/<%=session.userId%>', data);

                if (response.data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: "Password Updated",
                        text: "Your password has been successfully updated.",
                    }).then(() => {
                        window.location.href = '/zipkart/user/accountDetails/user-profile/<%=session.userId%>';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: response.data.message || "Failed to update password. Please try again.",
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.response?.data?.message || "An unexpected error occurred. Please try again later.",
                });
            }
        });

        function validatePasswordStrength(password) {
            const regex = /^(?=.*[a-zA-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            return regex.test(password);
        }

        function validatePasswords() {
            const newPassword = document.getElementById("new_password").value;
            const confirmPassword = document.getElementById("confirm_password").value;
            const newPasswordError = document.getElementById("new_password").nextElementSibling;
            const confirmPasswordError = document.getElementById("confirm_password").nextElementSibling;

            if (!validatePasswordStrength(newPassword)) {
                newPasswordError.textContent = "Password must be at least 8 characters long, include a number, and a special character.";
                newPasswordError.style.display = "block";
            } else {
                newPasswordError.style.display = "none";
            }

            if (confirmPassword && newPassword !== confirmPassword) {
                confirmPasswordError.textContent = "Passwords do not match.";
                confirmPasswordError.style.display = "block";
            } else {
                confirmPasswordError.style.display = "none";
            }
        }
    </script>
</body>
<style>
    /* asd.css */

/* General Styles */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f9f9f9;
}

/* Header Styles */
header {
    background-color: #2874f0;
    color: white;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 20px;
}

header .logo img {
    height: 40px;
}

header .search-bar {
    flex: 1;
    margin: 0 20px;
    display: flex;
    align-items: center;
}

header .search-bar input {
    flex: 1;
    padding: 10px;
    border: none;
    border-radius: 4px 0 0 4px;
    outline: none;
}

header .search-bar button {
    background-color: #0d47a1;
    border: none;
    padding: 10px 15px;
    color: white;
    cursor: pointer;
    border-radius: 0 4px 4px 0;
}

header .user-actions a {
    margin-left: 20px;
    color: white;
    text-decoration: none;
    font-size: 14px;
}

header .user-actions a:hover {
    text-decoration: underline;
}

/* Main Content Styles */
main {
    max-width: 600px;
    margin: 50px auto;
    background-color: white;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

main h1 {
    text-align: center;
    font-size: 24px;
    margin-bottom: 30px;
    color: #333;
}

form .form-group {
    margin-bottom: 20px;
}

form .form-group label {
    display: block;
    margin-bottom: 5px;
    font-size: 14px;
    color: #555;
}

form .form-group input {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    outline: none;
    transition: border-color 0.3s ease;
}

form .form-group input:focus {
    border-color: #2874f0;
}

form button {
    display: block;
    width: 100%;
    padding: 10px;
    font-size: 16px;
    background-color: #2874f0;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

form button:hover {
    background-color: #0d47a1;
}

/* Footer Styles */
footer {
    text-align: center;
    margin-top: 50px;
    padding: 10px 0;
    color: #777;
    font-size: 14px;
}

</style>
</html>
