<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Zipkart - Email Verification</title>
    <link rel="stylesheet" href="/css/otp.css">
    <link rel="stylesheet" href="/public/css/otp.css">
    
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <header>
        <div class="logo">
            <img src="zipkart_logo.png" alt="Zipkart Logo">
        </div>
    </header>

    <main>
        <h1>Please check your email</h1>
        <p>We've sent a code to <b><%= email %></b></p>

        <!-- Added ID to the form -->
        <form id="otpForm">
            <div class="code-input">
                <input type="text" id="otp1" maxlength="1">
                <input type="text" id="otp2" maxlength="1">
                <input type="text" id="otp3" maxlength="1">
                <input type="text" id="otp4" maxlength="1">
            </div>
            <input type="hidden" id="combinedOtp" name="otp">
            <input type="hidden" id="email" name="email" value="<%= email %>">
            <input type="hidden" id="password" name="password" value="<%= password %>">

            <p class="resend-link">Didn't get the code? 
                <a id="resend-link" onclick="resendOtp('<%= email %>')" class="disabled">Click to resend</a>
            </p>

            <div id="timer" class="timer">Retry in: <span id="timer-countdown">60</span> seconds</div>

            <div class="buttons">
                <a href="signup"><button type="button">Cancel</button></a>
                <button type="submit">Verify</button> <!-- This now triggers verifyOtp(event) -->
            </div>
        </form>
    </main>

    <footer></footer>

    <script>
        // Attach event listener to form submission
        document.getElementById("otpForm").addEventListener("submit", verifyOtp);

        function verifyOtp(event) {
            event.preventDefault(); // Prevent default form submission
            
            // Get OTP values
            const otp1 = document.getElementById('otp1').value;
            const otp2 = document.getElementById('otp2').value;
            const otp3 = document.getElementById('otp3').value;
            const otp4 = document.getElementById('otp4').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            // Combine OTP fields into one string
            const combinedOtp = otp1 + otp2 + otp3 + otp4;

            // Validate OTP (Ensure it's 4 digits)
            if (combinedOtp.length !== 4 || isNaN(combinedOtp)) {
                return Swal.fire({
                    icon: "error",
                    title: "Invalid OTP",
                    text: "Please enter a valid 4-digit OTP.",
                });
            }

            // Send OTP data via Axios
            axios.patch("/zipkart/user/forgot-password/verify/render-otp/update-password", { email, otp: combinedOtp, password })
                .then(response => {
                    if (response.data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "OTP Verified!",
                            text: "Password changed successfully.",
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.href = "/zipkart/user/login"; // Redirect to login page
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Verification Failed",
                            text: response.data.message || "Incorrect OTP. Please try again."
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: error.response?.data?.message || "Something went wrong. Please try again."
                    });
                });
        }

        let resendLink, timerDisplay, timer, timeLeft;

        document.addEventListener("DOMContentLoaded", () => {
            resendLink = document.getElementById("resend-link");
            timerDisplay = document.getElementById("timer-countdown");

            // Initial disabling of the resend link
            resendLink.classList.add("disabled");
            resendLink.style.pointerEvents = "none";

            // Initial timer setup
            timeLeft = 60;
            startTimer();
        });

        function startTimer() {
            timer = setInterval(() => {
                timeLeft--;
                timerDisplay.textContent = timeLeft;

                if (timeLeft <= 0) {
                    clearInterval(timer);
                    timerDisplay.textContent = "0";
                    // Enable resend link when the timer finishes
                    resendLink.classList.remove("disabled");
                    resendLink.style.pointerEvents = "auto";
                }
            }, 1000);
        }

        async function resendOtp(email) {
            resendLink.classList.add("disabled");
            resendLink.style.pointerEvents = "none";
            
            timeLeft = 60;
            timerDisplay.textContent = timeLeft;
            startTimer();

            try {
                const response = await axios.post('/zipkart/user/forgot-password/verify/render-otp/update-password/resend-otp', { email });
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Resend OTP sent successfully.',
                });
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.response?.data?.message || 'An unexpected error occurred.',
                });
            }
        }
    </script>

    <style>
        .disabled {
            color: rgb(255, 0, 0);
            pointer-events: none;
            text-decoration: none;
        }
        .timer {
            margin: 10px 0;
            font-size: 14px;
            color: #ff0000;
        }
    </style>
</body>
</html>
