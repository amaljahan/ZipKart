<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin - Products Management</title>
  <link rel="stylesheet" href="/css/admin/dashboard.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <!-- Sidebar -->
  <aside class="sidebar">
    <div class="logo">
      <h1><span class="brand">Zip</span>Kart</h1>
    </div>
    <nav class="menu">
      <ul>
        <li class="menu-item"><a href="/zipkart/admin/dashboard">Dashboard</a></li>
        <li class="menu-item"><a href="/zipkart/admin/users/view-users">Users</a></li>
        <li class="menu-item"><a href="/zipkart/admin/categories/view-category">Categories</a></li>
        <li class="menu-item active"><a href="/zipkart/admin/products/view-products">Products</a></li>
        <li class="menu-item"><a href="#">Orders</a></li>
        <li class="menu-item"><a href="#">Settings</a></li>
      </ul>
    </nav>
  </aside>

  <!-- Main Content -->
  <main class="main-content">
    <!-- Header -->
    <header class="header">
      <div class="title">Products Management</div>
      <a href="/zipkart/admin/logout"><button class="logout">Logout</button></a>
    </header>

    <!-- Add Product Button -->
    <div class="product-actions">
      <a href="view-add-product"><button id="addProductBtn" style="background-color: #4f46e5; padding: 12px 20px; border: none; border-radius: 8px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
        Add New Product
      </button></a>
    </div>

    <!-- Products Table -->
    <section>
      <table>
        <thead>
          <tr>
            <th>Si. No</th>
            <th>Product Name</th>
            <th>Category</th>
            <th>Price</th>
            <th>Stock</th>
            <th>Images</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (products.length > 0) { %>
            <% products.forEach((product, index) => { %>
              <tr>
                <td><%= index + 1 %></td>
                <td><%= product.name %></td>
                <td><%= product.category.name %></td>
                <td>â‚¹<%= product.price.toFixed(2) %></td>
                <td><%= product.stock %> <%= product.unit %></td>
                <!-- Image Container -->
                <td>
                  <% if (product.images && product.images.length > 0) { %>
                    <div class="image-container">
                      <!-- Display the thumbnail for admin product list -->
                      <button class="btn-arrow left-arrow" onclick="previousImage('<%= product._id %>')">
                        <i class="fas fa-arrow-left"></i>
                      </button>
                      <img 
                        src="<%= product.images[0].thumbnailUrl %>" 
                        alt="<%= product.images[0].altText %>" 
                        class="product-image" 
                        id="productImage<%= product._id %>" 
                        data-images="<%= JSON.stringify(product.images) %>" 
                      >
                      <button class="btn-arrow right-arrow" onclick="nextImage('<%= product._id %>')">
                        <i class="fas fa-arrow-right"></i>
                      </button>
                    </div>
                  <% } else { %>
                    <span>No Images</span>
                  <% } %>
                </td>

                <td><%= product.isListed ? "Listed" : "Unlisted" %></td>
                <td>
                  <% if (product.isListed) { %>
                    <button class="btn-unlist" onclick="toggleStatus('<%= product._id %>', 'Unlisted')">Unlist</button>
                  <% } else { %>
                    <button class="btn-list" onclick="toggleStatus('<%= product._id %>', 'Listed')">List</button>
                  <% } %>
                  <a href="/zipkart/admin/products/view-edit-product/<%= product._id %>">
                    <button class="btn-edit"><i class="fas fa-edit"></i></button>
                  </a>
                  <button class="btn-delete" onclick="deleteProduct('<%= product._id %>')"><i class="fas fa-trash"></i></button>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="8">No products found</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </section>
  </main>

  <!-- JavaScript -->
  <script>
    // Edit product status with SweetAlert
    async function toggleStatus(productId, newStatus) {
      const isListed = newStatus === "Listed";
      
      // SweetAlert Confirmation
      const result = await Swal.fire({
        title: 'Are you sure?',
        text: `You want to change the status to ${newStatus}?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, change it!',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await axios.patch(`/zipkart/admin/products/edit-product/${productId}/status`, { isListed });
          await Swal.fire('Success!', response.data.message, 'success');
          location.reload(); // Reload the page to reflect changes
        } catch (error) {
          Swal.fire('Error!', 'There was an issue updating the status.', 'error');
        }
      }
    }

    // Delete product with SweetAlert
    async function deleteProduct(productId) {
      const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await axios.delete(`/zipkart/admin/products/delete-product/${productId}`);
          await Swal.fire('Deleted!', response.data.message, 'success');
          location.reload(); // Reload the page to reflect changes
        } catch (error) {
          Swal.fire('Error!', 'There was an issue deleting the product.', 'error');
        }
      }
    }

    function nextImage(productId) {
      console.log('Next Button clicked for Product ID:', productId);

      const imageElement = document.getElementById(`productImage${productId}`);
      const images = JSON.parse(imageElement.getAttribute('data-images')); // Parse the images data

      // Get the current image URL as a relative path (without the domain)
      const currentImageUrl = new URL(imageElement.src).pathname; // Extract the relative path
      console.log('Current Image URL:', currentImageUrl);

      // Find the current index of the image in the array
      const currentIndex = images.findIndex(image => image.thumbnailUrl === currentImageUrl || image.showcaseUrl === currentImageUrl);

      // Get the next image index, looping if needed
      const nextIndex = (currentIndex + 1) % images.length;

      // Update the image's src and alt attributes
      imageElement.src = images[nextIndex].thumbnailUrl; // You can use .showcaseUrl if you want to show showcase images
      imageElement.alt = images[nextIndex].altText;
    }

    function previousImage(productId) {

      const imageElement = document.getElementById(`productImage${productId}`);
      const images = JSON.parse(imageElement.getAttribute('data-images')); // Parse the images data

      // Get the current image URL as a relative path (without the domain)
      const currentImageUrl = new URL(imageElement.src).pathname; // Extract the relative path

      // Find the current index of the image in the array
      const currentIndex = images.findIndex(image => image.thumbnailUrl === currentImageUrl || image.showcaseUrl === currentImageUrl);

      // Get the previous image index, looping if needed
      const prevIndex = (currentIndex - 1 + images.length) % images.length;

      // Update the image's src and alt attributes
      imageElement.src = images[prevIndex].thumbnailUrl; // You can use .showcaseUrl if you want to show showcase images
      imageElement.alt = images[prevIndex].altText;
    }
  </script>
</body>
</html>
