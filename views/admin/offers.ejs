<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin - Offer Management</title>
  <link rel="stylesheet" href="/css/admin/dashboard.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
  .swal2-container {
    z-index: 99999 !important;
}
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  /* Base Layout */
  body {
    display: flex;
    font-family: Arial, sans-serif;
    min-height: 100vh;
    overflow-x: hidden;
  }

/* Sidebar Styles */
.sidebar {
    background-color: #1f2937;
    color: #fff;
    padding: 1rem;
    width: 240px;
    min-height: 100vh;
    transition: all 0.3s ease;
    position: fixed;
    left: 0;
    top: 0;
    z-index: 1000;
  }

.sidebar .logo {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 20px;
}
.logo {
    font-size: clamp(1.2rem, 2vw, 1.5rem);
    margin-bottom: 2rem;
    white-space: nowrap;
  }

.sidebar .menu-item {
  margin-bottom: 10px;
}

.sidebar .menu-item a {
  color: #fff;
  text-decoration: none;
  display: flex;
  align-items: center;
}
.menu-item a {
    color: #fff;
    text-decoration: none;
    display: flex;
    align-items: center;
    padding: 0.8rem;
    border-radius: 0.5rem;
    transition: background-color 0.3s;
  }

.sidebar .menu-item.active a {
  font-weight: bold;
}
.menu-item a:hover,
  .menu-item.active a {
    background-color: rgba(255, 255, 255, 0.1);
  }

.sidebar .menu-item i {
  margin-right: 10px;
}
.menu-item i {
    margin-right: 1rem;
    width: 1.2rem;
    text-align: center;
  }
  /* Main Content Area */
  .main-content {
    flex: 1;
    padding: 1.5rem;
    margin-left: 240px;
    width: calc(100% - 240px);
    transition: all 0.3s ease;
  }

/* Header Styles */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 2rem;
  }


.header .title {
  font-size: 1.5rem;
}
.title {
    font-size: clamp(1.2rem, 2.5vw, 1.5rem);
  }
/* Table Styles */
.offers-table,
.orders-table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
}
.offers-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 2rem;
    font-size: clamp(0.8rem, 1.5vw, 1rem);
  }

.offers-table th,
.offers-table td,
.orders-table th,
.orders-table td {
  border: 1px solid #ddd;
  padding: 12px;
  text-align: left;
}

.offers-table th,
.orders-table th {
  background-color: #1f2937;
  color: white;
  font-weight: bold;
}
.offers-table th,
  .offers-table td {
    padding: clamp(0.5rem, 1vw, 1rem);
    text-align: left;
    border: 1px solid #ddd;
  }

.offers-table tr:nth-child(even) {
  background-color: #f9fafb;
}

/* Button Styles */
.btn-add-offer {
  background-color: #10B981;
  color: white;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
  display: flex;
  align-items: center;
  gap: 8px;
}

.btn-add-offer,
  .btn-edit,
  .btn-delete,
  .btn-toggle {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.25rem;
    cursor: pointer;
    font-size: clamp(0.8rem, 1.5vw, 1rem);
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
  }


.btn-edit {
  background-color: #3B82F6;
  color: white;
}

.btn-delete {
  background-color: #EF4444;
  color: white;
}

.btn-view {
  background-color: #17a2b8;
  color: white;
}

.btn-toggle.active {
  background-color: #10B981;
  color: white;
}

.btn-toggle.inactive {
  background-color: #9b9b9b;
  color: white;
}

/* Status Indicators */
.status-active {
  color: #10B981;
  font-weight: bold;
}

.status-inactive {
  color: #6B7280;
  font-weight: bold;
}

/* Modal Styles */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 2000;
    padding: 1rem;
  }

  .modal-content {
    background: white;
    width: min(600px, 100%);
    margin: 2rem auto;
    padding: 2rem;
    border-radius: 0.5rem;
    position: relative;
    max-height: 90vh;
    overflow-y: auto;
  }


.modal-title {
  color: #1f2937;
}

.close {
  position: absolute;
  right: 20px;
  top: 15px;
  font-size: 24px;
  cursor: pointer;
}

/* Form Styles */
.form-group {
    margin-bottom: 1rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: bold;
  }


  .form-group input,
  .form-group select {
    width: 100%;
    padding: 0.8rem;
    border: 1px solid #ddd;
    border-radius: 0.25rem;
    font-size: 1rem;
  }

.form-control:focus {
  border-color: #1f2937;
  box-shadow: 0 0 0 0.2rem rgba(31, 41, 55, 0.25);
}

.error-message,
.error {
  color: #dc3545;
  font-size: 0.875rem;
  margin-top: 0.25rem;
  display: none;
}

.is-invalid {
  border-color: #dc3545 !important;
}

.btn-submit {
  background-color: #10B981;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  width: 100%;
  margin-top: 15px;
}

.btn-submit:disabled {
  background-color: #9CA3AF;
  cursor: not-allowed;
}

/* Pagination Styles */
.pagination {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: center;
  margin: 0;
  padding: 10px 0;
  background-color: #f8f9fa;
  box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
  z-index: 500;
}

.pagination a {
  padding: 8px 12px;
  text-decoration: none;
  border: 1px solid #ddd;
  color: #333;
  margin: 0 4px;
  border-radius: 4px;
  transition: all 0.3s ease;
}

.pagination a:hover {
  background-color: #e9ecef;
}

.pagination a.active {
  background-color: #1f2937;
  color: white;
  border-color: #1f2937;
}
@media (max-width: 1024px) {
    .sidebar {
      width: 200px;
    }
    .main-content {
      margin-left: 200px;
      width: calc(100% - 200px);
    }
  }

  @media (max-width: 768px) {
    body {
      flex-direction: column;
    }

    .sidebar {
      width: 100%;
      min-height: auto;
      position: relative;
      padding: 1rem;
    }

    .main-content {
      margin-left: 0;
      width: 100%;
      padding: 1rem;
    }

    .menu {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .menu-item {
      margin: 0;
      flex: 1 1 auto;
    }

    .menu-item a {
      padding: 0.5rem;
      justify-content: center;
    }

    .menu-item span {
      display: none;
    }

    .menu-item i {
      margin: 0;
    }

    .offers-table {
      display: block;
      overflow-x: auto;
      white-space: nowrap;
    }
  }

  @media (max-width: 480px) {
    .header {
      flex-direction: column;
      align-items: stretch;
    }

    .btn-add-offer {
      width: 100%;
      justify-content: center;
    }

    .modal-content {
      padding: 1rem;
      margin: 1rem;
    }

    .form-group input,
    .form-group select {
      padding: 0.6rem;
    }

    td .btn-edit,
    td .btn-delete,
    td .btn-toggle {
      padding: 0.4rem;
      font-size: 0.8rem;
    }
  }

  /* Handle very small screens */
  @media (max-width: 320px) {
    .menu-item a {
      padding: 0.4rem;
    }

    .menu-item i {
      font-size: 0.9rem;
    }

    .offers-table th,
    .offers-table td {
      padding: 0.4rem;
      font-size: 0.75rem;
    }
  }
</style>

</head>
<body>
  <!-- Sidebar -->
  <aside class="sidebar">
    <div class="logo">
      <h1><span class="brand">Zip</span>Kart</h1>
    </div>
    <nav class="menu">
      <ul>
        <li class="menu-item"><a href="/zipkart/admin/dashboard"><i class="fas fa-tachometer-alt"></i> <span>Dashboard</span></a></li>
        <li class="menu-item"><a href="/zipkart/admin/users/view-users"><i class="fas fa-users"></i> <span>Users</span></a></li>
        <li class="menu-item"><a href="/zipkart/admin/categories/view-category"><i class="fas fa-list"></i> <span>Categories</span></a></li>
        <li class="menu-item"><a href="/zipkart/admin/products/view-products"><i class="fas fa-box"></i> <span>Products</span></a></li>
        <li class="menu-item"><a href="/zipkart/admin/orders/view-orders"><i class="fas fa-shopping-cart"></i> <span>Orders</span></a></li>
        <li class="menu-item "><a href="/zipkart/admin/coupons/view-coupons"><i class="fas fa-ticket-alt"></i> <span>Coupons</span></a></li>
        <li class="menu-item active"><a href="/zipkart/admin/offers/view-offers"><i class="fas fa-ticket-alt"></i> <span>Offers</span></a></li>
        <li class="menu-item"><a href="#"><i class="fas fa-cog"></i> <span>Settings</span></a></li>
      </ul>
    </nav>
  </aside>


  <!-- Main Content -->
  <main class="main-content">
    <!-- Header -->
    <header class="header">
      <div class="title">Offer Management</div>
      <a style="text-decoration: none;" href="/zipkart/admin/offers/view-offers/view-add-offer"><button class="btn-add-offer">
        <i class="fas fa-plus"></i>
        Add New Offer
      </button></a>
    </header>

    <!-- Offers List -->
    <section class="offers-list">
      <table class="offers-table">
          <thead>
              <tr>
                  <th>Offer Name</th>
                  <th>Description</th>
                  <th>Discount Type</th>
                  <th>Discount Value</th>
                  <th>Offer Type</th>
                  <th>Items</th>
                  <th>Max Discount</th>
                  <th>Start Date</th>
                  <th>End Date</th>
                  <th>Status</th>
                  <th>Actions</th>
              </tr>
          </thead>
          <tbody>
              <% offers.forEach(offer => { %>
                  <tr>
                      <td><%= offer.name %></td>
                      <td><%= offer.description %></td>
                      <td><%= offer.discountType %></td>
                      <td><%= offer.discountValue %></td>
                      <td><%= offer.applicableType %></td>
                      <td>
                        <% offer.applicableItems.forEach(item => { %>
                        <%= item.name %><br> <!-- Display the name of each applicable item -->
                        <% }) %>
                  </td>
                      <td><%= offer.maxDiscountAmount %></td>
                      <td><%= new Date(offer.startDate).toLocaleDateString('en-GB') %></td>
                      <td><%= new Date(offer.endDate).toLocaleDateString('en-GB') %></td>
                      <td>
                          <% if (offer.isActive) { %>
                              <span style="color: green;">Active</span>
                          <% } else { %>
                              <span style="color: red;">Inactive</span>
                          <% } %>
                      </td>
                      <td>
                        <button class="btn-edit" data-id="<%= offer._id %>"><i class="fas fa-edit"></i></button>
                        <button class="btn-toggle <%= offer.isActive ? 'active' : 'inactive' %>" data-id="<%= offer._id %>">
                          <%= offer.isActive ? 'Inactive' : 'Active' %>
                        </button>
                        <button class="btn-delete" data-id="<%= offer._id %>"><i class="fas fa-trash"></i></button>
                      </td>
                    </tr>
                      <!-- <td>
                          <button onclick="editOffer('<%= offer._id.$oid %>')">Edit</button>
                          <button onclick="deleteOffer('<%= offer._id.$oid %>')">Delete</button>
                      </td> -->
                  </tr>
              <% }); %>
          </tbody>
      </table>
  </section>



      <script>
        document.querySelectorAll('.btn-toggle').forEach(button => {
          button.addEventListener('click', async function () {
            // Get the offer ID from data-id attribute
            const offerId = this.getAttribute('data-id');
            console.log("Clicked");
        
            // Get current status (active/inactive) from button's class
            const isCurrentlyActive = this.classList.contains('active');
        
            try {
              const result = await Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to set the status to ${isCurrentlyActive ? "Inactive" : "Active"}?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, proceed!',
                cancelButtonText: 'Cancel'
              });
        
              if (result.isConfirmed) {
                const response = await axios.patch(`/zipkart/admin/offers/view-offers/update-status`, {
                  isActive: !isCurrentlyActive, // Toggle status before sending
                  offerId
                });
        
                await Swal.fire({
                  title: 'Success!',
                  text: response.data.message,
                  icon: 'success',
                  confirmButtonText: 'OK'
                });
        
                location.reload();
              } else {
                await Swal.fire({
                  title: 'Cancelled',
                  text: 'No changes were made.',
                  icon: 'info',
                  confirmButtonText: 'OK'
                });
              }
            } catch (error) {
              await Swal.fire({
                title: 'Error!',
                text: error.response?.data?.error || 'Something went wrong. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
              });
            }
          });
        });


        document.querySelectorAll('.btn-delete').forEach(button => {
          button.addEventListener('click', async function () {
            // Get the offer ID from data-id attribute
            const offerId = this.getAttribute('data-id');
            try {
              const result = await Swal.fire({
                title: 'Are you sure?',
                text: `Do you want to "delete" this?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, proceed!',
                cancelButtonText: 'Cancel'
              });
        
              if (result.isConfirmed) {
                const response = await axios.delete(`/zipkart/admin/offers/view-offers/remove/${offerId}`)
        
                await Swal.fire({
                  title: 'Success!',
                  text: response.data.message,
                  icon: 'success',
                  confirmButtonText: 'OK'
                });
        
                location.reload();
              } else {
                await Swal.fire({
                  title: 'Cancelled',
                  text: 'No changes were made.',
                  icon: 'info',
                  confirmButtonText: 'OK'
                });
              }
            } catch (error) {
              await Swal.fire({
                title: 'Error!',
                text: error.response?.data?.error || 'Something went wrong. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
              });
            }

          });
        });

        </script>
        







  
  </main>
</body>
</html>