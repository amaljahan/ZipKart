<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Zipkart Login</title>
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
        background: #f5f5f5;
        min-height: 100vh;
      }

      .container-scroller {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
      }

      .auth.login-bg {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        width: 100%;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 450px;
        margin: 1rem;
      }

      .card-body {
        padding: 2rem;
      }

      .card-title {
        color: #2874f0;
        font-size: 1.75rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
      }

      .form-group {
        margin-bottom: 1.5rem;
      }

      label {
        display: block;
        margin-bottom: 0.5rem;
        color: #333;
        font-weight: 500;
      }

      .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
        transition: border-color 0.2s;
      }

      .form-control:focus {
        border-color: #2874f0;
        outline: none;
        box-shadow: 0 0 0 2px rgba(40, 116, 240, 0.2);
      }

      .btn {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
        width: 100%;
      }

      .btn-primary {
        background: #2874f0;
        color: white;
      }

      .btn-primary:hover {
        background: #1c5ac0;
      }

      small {
        display: block;
        margin-top: 0.25rem;
        font-size: 0.875rem;
      }

      /* Responsive adjustments */
      @media (max-width: 768px) {
        .card-body {
          padding: 1.5rem;
        }

        .card-title {
          font-size: 1.5rem;
        }
      }

      @media (max-width: 480px) {
        .card-body {
          padding: 1rem;
        }

        .form-control {
          padding: 0.5rem 0.75rem;
        }

        .btn {
          padding: 0.5rem 1rem;
        }
      }

      /* Error list styling */
      ul {
        list-style: none;
        padding-left: 0;
        margin-bottom: 1rem;
      }

      ul li {
        color: #dc3545;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
      }
    </style>
  </head>
  <body>
    <div class="container-scroller">
      <div class="auth login-bg">
        <div class="card">
          <div class="card-body">
            <!-- <h3 class="card-title">Zipkart Admin Login</h3> -->

<!-- ------------------------------login ------it for development purpose------------------------------------------------------------------------------- -->
            <a href="" onclick="login()"><h3 class="card-title">Zipkart Admin Login</h3></a>
            <script>
                async function login(){
                  try {
                    const userData = {
                      email:"admin@gmail.com",
                      password:"1234567890",
                    };
                      const response = await axios.post('login',userData);
                      await Swal.fire({
                      icon: 'success',
                      title: 'Success!',
                      text: 'Login successful. Redirecting to admin dashboard...',
                    });
                    window.location.href = response.data.redirectUrl;
                  } catch (error) {
                    Swal.fire({
                      icon: 'error',
                      title: 'Error!',
                      text: error.response?.data?.message || 'An unexpected error occurred.',
                    });
                  }
                }
      
            </script>
<!-- ------------------------------login ------it for development purpose------------------------------------------------------------------------------- -->




            <form id="adminLoginForm">
              <div class="form-group">
                <label for="email">Email</label>
                <input type="email" for="emailError" class="form-control" name="email" id="email" placeholder="Enter your email">
                <small id="emailError"></small>
              </div>
              <div class="form-group">
                <label for="password">Password</label>
                <input type="password" for="passwordError" class="form-control" name="password" id="password" placeholder="Enter your password">
                <small id="passwordError"></small>
              </div>
              <button type="submit" onclick="submitFun()" class="btn btn-primary">Login</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script>
      async function submitFun() {
        const email = document.getElementById('email').value.trim();
        const password = document.getElementById('password').value.trim();

        if (email === '' || password === '') {
          return Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'All fields are required!'
          });
        }

        const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;
        if (!email.match(emailPattern)) {
          return Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Please enter a valid email address.'
          });
        }

        const userData = {
          email,
          password,
        };

        try {
          const response = await axios.post('login', userData);
          await Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Login successful. Redirecting to admin dashboard...',
          });
          window.location.href = response.data.redirectUrl;
        } catch (error) {
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: error.response?.data?.message || 'An unexpected error occurred.',
          });
        }
      }
    </script>
  </body>
</html>