<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details - <%= order.orderId %></title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.tailwindcss.com"></script>


<style>
    body { background-color: #f4f6f9; }
    .order-card { transition: transform 0.3s; }
    .order-card:hover { transform: scale(1.01); }
    .product-image { max-width: 100px; height: auto; }
    @media (max-width: 768px) {
        .responsive-stack > * { margin-bottom: 10px; }
    }
    .brand {
    color: #5a91e8;
}
.logo h1 {
    font-size: 1.7rem;
    margin: 15px 0 -30px 14px;
    color: black;
    }
</style>
</head>
<body>
    <div class="logo">
       <a style="text-decoration: none;" href="/zipkart/admin/dashboard"><h1><span class="brand">Zip</span>Kart</h1></a> 
      </div>
    <div class="container-fluid py-4">
        <div class="row">
            <div class="col-12 col-xl-10 offset-xl-1">
                <div class="card shadow-sm order-card">
                    <div style="background-color: #1f2937;" class="card-header text-white d-flex flex-wrap justify-content-between align-items-center">
                        <h4 class="mb-0">Order Id:- <%= order.orderId %></h4>
                        <div class="d-flex align-items-center responsive-stack">
                            <select id="orderStatus-<%= order.orderId %>" class="form-select form-select-sm w-auto me-2">
                                <%if(order.status === "Cancelled"){%>
                                    <option value="<%= order.status %>" selected><%= order.status %></option>
                                <% } else { %>
                                    <% 
                                    const statuses = ['Order placed', 'Shipped', 'Out for Delivery', 'Delivered'];
                                    const currentIndex = statuses.indexOf(order.status);
                                    const availableStatuses = currentIndex === -1 ? statuses : statuses.slice(currentIndex);
                                    %>
                                    <% availableStatuses.forEach(status => { %>
                                        <option value="<%= status %>" 
                                            <%= order.status === status ? 'selected' : '' %>>
                                            <%= status %>
                                        </option>
                                    <% }) %>
                                <% } %>
                            </select>
                            <%if( order.status === "Cancelled"){%>

                            <button disabled
                                id="updateStatus-<%= order.orderId %>" 
                                class="btn btn-light btn-sm"
                                onclick="updateOrderStatus('<%= order.orderId %>')">
                                Update Status
                            </button>
                            <% }else{%>

                            <button 
                                id="updateStatus-<%= order.orderId %>" 
                                class="btn btn-light btn-sm"
                                onclick="updateOrderStatus('<%= order.orderId %>')">
                                Update Status
                            </button>
                            <%}%>

                        </div>
                    </div>
                    
                    
                    
                    
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h5>Customer</h5>
                                <p><strong>Name:</strong> <%= order.address.name %></p>
                                <p><strong>Phone:</strong> <%= order.address.phoneNumber %></p>
                                <p><strong>Address:</strong> <%= order.address.address %>, <%= order.address.locality %>, 
                                    <%= order.address.cityDistrictTown %>, <%= order.address.state %> <%= order.address.pincode %></p>
                            </div>
                            <div class="col-md-6">
                                <h5>Order Info</h5>
                                <p><strong>Date:</strong> <%= new Date(order.orderDate).toLocaleDateString() %></p>
                                <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
                                <p><strong>Payment Status :</strong> <%= order.paymentStatus %></p>
                            </div>
                        </div>
                        <hr>
                        <h5>Products</h5>
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Product Name</th>
                                        <th>Qty</th>
                                        <th>Price</th>
                                        <th>Subtotal</th>
                                        <th>Product Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% order.products.forEach(product => { %>
                                    <tr>
                                        <td>
                                            <img height="50" width="50" src="<%= product.productId.images[0].thumbnailUrl %>" class="product-image img-thumbnail" alt="Product">
                                        </td>
                                        <td><%= product.productId.name %></td>    
                                        <td><%= product.quantity %></td>
                                        <td>₹<%= product.price.toFixed(2)/product.quantity %></td>
                                        <td>₹<%= product.price.toFixed(2) %></td>
                                        <td>
                                            <% if (order.status === "Delivered") { %>
                                                <% if (product.returnStatus === "Return Requested") { %>
                                                    <button class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600" onclick="handleReturn(this,'Return Approved', '<%= product.productId._id %>')">Accept</button>
                                                    <button class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600" onclick="handleReturn(this,'Return Rejected', '<%= product.productId._id %>')">Reject</button>
                                                <% } else { %>
                                                    <% let statusColor = '';
                                                       let textColor = 'text-white';
                                                       
                                                       if (product.returnStatus === 'Return Rejected') {
                                                           statusColor = 'bg-red-500';
                                                       } else if (product.returnStatus === 'Return Approved') {
                                                           statusColor = 'bg-blue-500';
                                                       } else if (product.returnStatus === 'Product Returned') {
                                                           statusColor = 'bg-green-500';
                                                       } %>
                                                    
                                                    <% if (product.returnStatus) { %>
                                                        <div class="<%= statusColor %> <%= textColor %> py-2 px-4 rounded text-center">
                                                            <%= product.returnStatus %>
                                                        </div>
                                                    <% } else { %>
                                                        <div class="text-gray-700 py-2 px-4 rounded text-center">
                                                            <%= product.status %>
                                                        </div>
                                                    <% } %>
                                                <% } %>
                                            <% } else { %>
                                                <div class="text-gray-700 py-2 px-4 rounded text-center">
                                                    <%= product.status %>
                                                </div>
                                            <% } %>
                                        </td>
                                    </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>


                        <script>
                            function handleReturn(button, status, productId) {
                                 
                                Swal.fire({
                                    title: 'Are you sure?',
                                    text: `Do you really want to ${status === "Return Approved" ? "approve" : "reject"} this return request?`,
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#d33',
                                    cancelButtonColor: '#3085d6',
                                    confirmButtonText: 'Yes, Do it!'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        axios.patch('/zipkart/admin/orders/view-order/<%= order._id %>/handle-return', { productId, status })
                                        .then(async (response) => {
                                                if (response.data.success) {
                                                    const parentTd = button.parentElement;
                                                    const statusDiv = document.createElement('div');
                                                    const statusColor = status === 'Return Approved' ? 'bg-blue-500' : 'bg-red-500';
                                                    statusDiv.className = `${statusColor} text-white py-2 px-4 rounded text-center`;
                                                    statusDiv.textContent = status;
                            
                                                    // Remove all buttons
                                                    while (parentTd.firstChild) {
                                                        parentTd.removeChild(parentTd.firstChild);
                                                    }
                                                    parentTd.appendChild(statusDiv);
                            
                                                    await Swal.fire(
                                                        'Success!',
                                                        `Return request has been ${status.toLowerCase()}.`,
                                                        'success'
                                                    );
                            
                                                    // Reload the page to reflect changes
                                                    window.location.reload();
                                                } else {
                                                    return Swal.fire({
                                                        title: 'Error',
                                                        text: response.data.message || "Something went wrong!",
                                                        icon: 'error',
                                                        confirmButtonText: 'OK'
                                                    });
                                                }
                                            })
                                            .catch((error) => {
                                                Swal.fire({
                                                        title: 'Error',
                                                        text: response.data.message || "Something went wrong!",
                                                        icon: 'error',
                                                        confirmButtonText: 'OK'
                                                    });
                                                console.error(error);
                                            });
                                    }
                                });
                            }
                            </script>
                            
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <h5>Summary</h5>
                                <table class="table">
                                    <tr>
                                        <td>Subtotal:</td>
                                        <td class="text-end">₹<%= order.subtotal.toFixed(2) %></td>
                                    </tr>
                                    <tr>
                                        <td>Delivery:</td>
                                        <td class="text-end">₹<%= order.deliveryCharge.toFixed(2) %></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Total:</strong></td>
                                        <td class="text-end"><strong>₹<%= (order.subtotal + order.deliveryCharge).toFixed(2) %></strong></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <a href="/zipkart/admin/orders/view-orders" class="btn btn-secondary">Back to Orders</a>
                        <%if(order.status !== "Delivered" && order.status !== "Cancelled"){%>
                            <button id="cancelOrder" class="btn btn-danger">Cancel Entire Order</button>
                        <%}%>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.all.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', () => {
    // Update Order Status Function
    window.updateOrderStatus = (orderId) => {
        const selectElement = document.getElementById(`orderStatus-${orderId}`);
        if (!selectElement) {
            console.error(`No select element found for orderId: ${orderId}`);
            return;
        }

        const selectedStatus = selectElement.value;
        const statuses = ['Order placed', 'Shipped', 'Out for Delivery', 'Delivered'];
        const cancelAt = selectedStatus

        Swal.fire({
            title: 'Update Status',
            text: `Change status to "${selectedStatus}"?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Update'
        }).then((result) => {
            if (result.isConfirmed) {
                axios.patch(`/zipkart/admin/orders/view-orders/<%= order._id %>/update-status`, { status: selectedStatus ,cancelAt})
                    .then(() => {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: `Order status updated to "${selectedStatus}"`,
                            confirmButtonText: 'OK'
                        }).then(() => {
                                // Optionally redirect or refresh the page
                                window.location.reload(); // Refresh the page to reflect the changes
                        });
                    })
                    .catch((error) => {
                        const errorMessage = error.response?.data?.message || 'Failed to update order status.';
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: errorMessage,
                            confirmButtonText: 'OK'
                        });
                        console.error('Error updating status:', error);
                    });
            }
        });
    };

    // Cancel Entire Order Function
    const cancelOrderButton = document.getElementById('cancelOrder');
    if (cancelOrderButton) {
        cancelOrderButton.addEventListener('click', () => {
            Swal.fire({
                title: 'Cancel Order',
                text: 'Are you sure you want to cancel this entire order?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    axios.patch(`/zipkart/admin/orders/view-orders/<%= order._id %>/update-status`, { status: 'Cancelled' })
                        .then(() => {
                            Swal.fire({
                                icon: 'success',
                                title: 'Order Cancelled',
                                text: 'The order has been successfully cancelled.',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                // Optionally redirect or refresh the page
                                window.location.reload(); // Refresh the page to reflect the changes
                            });
                        })
                        .catch((error) => {
                            const errorMessage = error.response?.data?.message || 'Failed to cancel the order.';
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMessage,
                                confirmButtonText: 'OK'
                            });
                            console.error('Error cancelling order:', error);
                        });
                }
            });
        });
    }
});

    </script>
    
    
</body>
</html>